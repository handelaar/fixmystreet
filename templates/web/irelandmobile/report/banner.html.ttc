use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1345324329',
        'name' => 'report/banner.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
    # USE
    $stash->set('date',
                $context->plugin('date'));
    $output .=  "\n";
    
    $output .=  "\n\n";
#line 10 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
    if ($stash->get(['problem', 0, 'is_open', 0]) && $stash->get(['date', 0, 'now', 0]) - $stash->get(['problem', 0, 'lastupdate_local', 0, 'epoch', 0]) > 8 * 7 * 24 * 60 * 60) {
    $output .=  "\n    ";
#line 9 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
    $output .=  $context->include('banner', { 'id' => 'unknown', 'text' => $stash->get(['loc', [ 'Unknown' ]]) });
    $output .=  "\n";
    }
    
    $output .=  "\n";
#line 13 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
    if ($stash->get(['problem', 0, 'is_fixed', 0])) {
    $output .=  "\n    ";
#line 12 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
    $output .=  $context->include('banner', { 'id' => 'fixed', 'text' => $stash->get(['loc', [ 'Fixed' ]]) });
    $output .=  "\n";
    }
    
    $output .=  "\n";
#line 16 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
    if ($stash->get(['problem', 0, 'is_closed', 0])) {
    $output .=  "\n    ";
#line 15 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
    $output .=  $context->include('banner', { 'id' => 'closed', 'text' => $stash->get(['loc', [ 'Closed' ]]) });
    $output .=  "\n";
    }
    
    $output .=  "\n";
#line 17 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
    $stash->set('states', [ 'investigating', 'in progress', 'planned' ]);
#line 20 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
    if ($stash->get(['states', 0, 'grep', [ $stash->get(['problem', 0, 'state', 0]) ], 'size', 0])) {
    $output .=  "\n    ";
#line 19 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
    $output .=  $context->include('banner', { 'id' => 'progress', 'text' => $stash->get(['loc', [ 'In progress' ]]) });
    $output .=  "\n";
    }
    
    $output .=  "\n\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'banner' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n    <div class=\"banner\">\n        <p id=\"";
#line 4 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
        $output .=  $stash->get('id');
        $output .=  "\">";
#line 4 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/banner.html"
        $output .=  $stash->get('text');
        $output .=  "</p>\n    </div>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
