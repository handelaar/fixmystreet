use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1345324329',
        'name' => 'front/news.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 10 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/front/news.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('news');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n    <p align=\"center\" style=\"margin-bottom:0\">\n        <img width=\"23\" height=\"12\" alt=\"";
#line 8 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/front/news.html"
    $output .=  $stash->get(['loc', [ 'New!' ]]);
    $output .=  "\" src=\"/i/new.png\" border=\"0\">";
#line 8 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/front/news.html"
    $output .=  $stash->get(['item', 0, 'date', 0]);
    $output .=  " ";
#line 8 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/front/news.html"
    $output .=  $stash->get(['item', 0, 'text', 0]);
    $output .=  "</p>\n    </p>\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
