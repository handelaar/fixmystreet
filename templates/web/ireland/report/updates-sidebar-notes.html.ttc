use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1345324329',
        'name' => 'report/updates-sidebar-notes.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "        <p>\n        ";
#line 4 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/updates-sidebar-notes.html"
    if ($stash->get(['problem', 0, 'council', 0]) ne '2482' || $stash->get(['problem', 0, 'send_method_used', 0]) ne 'Open311') {
    $output .=  "\n            ";
#line 3 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/updates-sidebar-notes.html"
    $output .=  $stash->get(['loc', [ 'Please note that updates are not sent to the council.' ]]);
    $output .=  "\n        ";
    }
    
    $output .=  "\n        ";
#line 5 "/home/genghis/sites/fixmystreet.ie/fixmystreet/templates/web/fixmystreet/report/updates-sidebar-notes.html"
    $output .=  $stash->get(['loc', [ 'Your information will only be used in accordance with our <a href="/privacy">privacy policy</a>' ]]);
    $output .=  "</p>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
