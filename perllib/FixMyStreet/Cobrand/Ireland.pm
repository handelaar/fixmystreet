package FixMyStreet::Cobrand::Ireland;
use base 'FixMyStreet::Cobrand::Default';

use strict;
use warnings;

use Carp;
use mySociety::MaPit;
use Math::BaseCalc;


sub country {
    return 'IE';
}

sub area_types          { FixMyStreet->config('MAPIT_TYPES') || [] }
sub area_types_children { FixMyStreet->config('MAPIT_TYPES_CHILDREN') || [] }

sub shorturl {
    my $self = shift;
    my ($id) = @_;
    my $base10 = new Math::BaseCalc(digits=>[0..9]);
    my $base62 = new Math::BaseCalc(digits=>['A'..'Z',0..9,'a'..'z']);
    my $shorten = $base62->to_base ($id);
    return $shorten;
}

sub set_lang_and_domain {
    my ( $self, $lang, $unicode, $dir ) = @_;
    my $set_lang = mySociety::Locale::negotiate_language(
        'en-gb,English,en_GB', 'en-gb'
    );
    mySociety::Locale::gettext_domain( 'FixMyStreet', $unicode, $dir );
    mySociety::Locale::change();
    return $set_lang;
}

sub short_name {
  my $self = shift;
  my ($area, $info) = @_;
  my $name = $area->{name};
  $name =~ s/ County Council$//;
  $name =~ s/ Council$//;
  $name =~ s/ & / and /;
  $name =~ s{/}{_}g;
  $name = URI::Escape::uri_escape_utf8($name);
  $name =~ s/%20/+/g;
  return $name;

}

sub site_title {
    my ($self) = @_;
    return 'FixMyStreet Ireland';
}

sub enter_postcode_text {
    my ( $self ) = @_;
    return _('Enter a nearby street name, area or townland');
}

# Is also adding language parameter
sub disambiguate_location {
    return {
        lang    => 'en_gb',
        country => 'IE',
        bing_country => 'Ireland',
        google_country => '.ie',
    };
}

sub get_council_sender {
    my ( $self, $area_id, $area_info ) = @_;

    my $send_method;

    my $council_config = FixMyStreet::App->model("DB::Open311conf")->search( { area_id => $area_id } )->first;
    $send_method = $council_config->send_method if $council_config;

    return $send_method if $send_method;

    return 'FixYourStreet' if (($area_id == 8) || ($area_id == 10) || ($area_id == 12) || ($area_id == 14) || ($area_id == 29)); # Dublin City, Fingal, Galway County, Kildare, South Dublin
    return 'Email';
}

sub find_closest {
    my ( $self, $latitude, $longitude, $problem ) = @_;
    my $str = '';

    if ( my $j = FixMyStreet::Geocode::Bing::reverse( $latitude, $longitude, disambiguate_location()->{bing_culture} ) ) {
        # cache the bing results for use in alerts
        if ( $problem ) {
            $problem->geocode( $j );
            $problem->update;
        }
        if ($j->{resourceSets}[0]{resources}[0]{name}) {
            $str .= sprintf(_("Nearest road: %s (automatically generated by Bing Maps)"),
                $j->{resourceSets}[0]{resources}[0]{name}) . "\n\n";
        }
    }

    return $str;
}

sub area_min_generation { 1 }

sub admin_base_url {
    return 'http://fixmystreet.ie/admin/';
}

# If lat/lon are present in the URL, OpenLayers will use that to centre the map.
# Need to specify a zoom to stop it defaulting to null/0.
sub uri {
    my ( $self, $uri ) = @_;

    $uri->query_param( zoom => 3 )
      if $uri->query_param('lat') && !$uri->query_param('zoom');

    return $uri;
}

sub geocoded_string_check {
    my ( $self, $s ) = @_;
    return 1 if $s =~ /, Ireland/;
    return 0;
}


1;
